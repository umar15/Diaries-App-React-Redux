[{"E:\\Bootcamp 2020\\diaries-app\\src\\index.tsx":"1","E:\\Bootcamp 2020\\diaries-app\\src\\services\\mirage\\server.ts":"2","E:\\Bootcamp 2020\\diaries-app\\src\\services\\mirage\\routes\\user.ts":"3","E:\\Bootcamp 2020\\diaries-app\\src\\services\\mirage\\routes\\diary.ts":"4","E:\\Bootcamp 2020\\diaries-app\\src\\store.ts":"5","E:\\Bootcamp 2020\\diaries-app\\src\\rootReducer.ts":"6","E:\\Bootcamp 2020\\diaries-app\\src\\features\\diary\\diariesSlice.ts":"7","E:\\Bootcamp 2020\\diaries-app\\src\\features\\auth\\authSlice.ts":"8","E:\\Bootcamp 2020\\diaries-app\\src\\features\\auth\\userSlice.ts":"9","E:\\Bootcamp 2020\\diaries-app\\src\\features\\entry\\entriesSlice.ts":"10","E:\\Bootcamp 2020\\diaries-app\\src\\features\\entry\\editorSlice.ts":"11","E:\\Bootcamp 2020\\diaries-app\\src\\app\\App.tsx":"12","E:\\Bootcamp 2020\\diaries-app\\src\\features\\auth\\Auth.tsx":"13","E:\\Bootcamp 2020\\diaries-app\\src\\services\\api.ts":"14","E:\\Bootcamp 2020\\diaries-app\\src\\util.ts":"15","E:\\Bootcamp 2020\\diaries-app\\src\\features\\home\\Home.tsx":"16"},{"size":450,"mtime":1612361958623,"results":"17","hashOfConfig":"18"},{"size":1354,"mtime":1612338255875,"results":"19","hashOfConfig":"18"},{"size":1233,"mtime":1612195531666,"results":"20","hashOfConfig":"18"},{"size":3079,"mtime":1612337978373,"results":"21","hashOfConfig":"18"},{"size":334,"mtime":1612356922554,"results":"22","hashOfConfig":"18"},{"size":597,"mtime":1612356673735,"results":"23","hashOfConfig":"18"},{"size":791,"mtime":1612356206658,"results":"24","hashOfConfig":"18"},{"size":642,"mtime":1612358089010,"results":"25","hashOfConfig":"18"},{"size":424,"mtime":1612355202387,"results":"26","hashOfConfig":"18"},{"size":668,"mtime":1612356289869,"results":"27","hashOfConfig":"18"},{"size":921,"mtime":1612356495483,"results":"28","hashOfConfig":"18"},{"size":665,"mtime":1612359838393,"results":"29","hashOfConfig":"18"},{"size":2786,"mtime":1612362096528,"results":"30","hashOfConfig":"18"},{"size":910,"mtime":1612357334622,"results":"31","hashOfConfig":"18"},{"size":536,"mtime":1612340290914,"results":"32","hashOfConfig":"18"},{"size":152,"mtime":1612362045183,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6isxd7",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Bootcamp 2020\\diaries-app\\src\\index.tsx",[],"E:\\Bootcamp 2020\\diaries-app\\src\\services\\mirage\\server.ts",[],["69","70"],"E:\\Bootcamp 2020\\diaries-app\\src\\services\\mirage\\routes\\user.ts",["71"],"import { Response, Request } from \"miragejs\";\r\nimport { handleErrors } from \"../server\";\r\nimport { User } from \"../../../interfaces/user.interface\";\r\nimport { randomBytes } from \"crypto\";\r\n\r\nconst generateToken = () => randomBytes(8).toString(\"hex\");\r\n\r\nexport interface AuthResponse {\r\n\ttoken: string;\r\n\tuser: User;\r\n}\r\n\r\nconst login = (schema: any, req: Request): AuthResponse | Response => {\r\n\tconst { username, password } = JSON.parse(req.requestBody);\r\n\tconst user = schema.users.findBy({ username });\r\n\tif (!user) {\r\n\t\treturn handleErrors(null, \"No user with that username exists\");\r\n\t}\r\n\tif (password !== user.password) {\r\n\t\treturn handleErrors(null, \"Password is incorrect\");\r\n\t}\r\n\tconst token = generateToken();\r\n\treturn {\r\n\t\tuser: user.attrs as User,\r\n\t\ttoken,\r\n\t};\r\n};\r\n\r\nconst signup = (schema: any, req: Request): AuthResponse | Response => {\r\n\tconst data = JSON.parse(req.requestBody);\r\n\tconst exUser = schema.users.findBy({ username: data.username });\r\n\tif (exUser) {\r\n\t\treturn handleErrors(null, \"A user with that username already exists\");\r\n\t}\r\n\tconst user = schema.users.create(data);\r\n\tconst token = generateToken();\r\n\treturn {\r\n\t\tuser: user.attrs as User,\r\n\t\ttoken,\r\n\t};\r\n};\r\n\r\nexport default { login, signup };\r\n","E:\\Bootcamp 2020\\diaries-app\\src\\services\\mirage\\routes\\diary.ts",["72"],"import { Response, Request } from \"miragejs\";\r\nimport { handleErrors } from \"../server\";\r\nimport { Diary } from \"../../../interfaces/diary.interface\";\r\nimport { Entry } from \"../../../interfaces/entry.interface\";\r\nimport dayjs from \"dayjs\";\r\nimport { User } from \"../../../interfaces/user.interface\";\r\nimport user from \"./user\";\r\n\r\nexport const create = (\r\n\tschema: any,\r\n\treq: Request\r\n): { user: User; diary: Diary } | Response => {\r\n\ttry {\r\n\t\tconst { title, type, userId } = JSON.parse(\r\n\t\t\treq.requestBody\r\n\t\t) as Partial<Diary>;\r\n\t\tconst exUser = schema.users.findBy({ id: userId });\r\n\t\tif (!exUser) {\r\n\t\t\treturn handleErrors(null, \"no such user exists\");\r\n\t\t}\r\n\t\tconst now = dayjs().format();\r\n\t\tconst diary = exUser.createDiary({\r\n\t\t\ttitle,\r\n\t\t\ttype,\r\n\t\t\tcreateAt: now,\r\n\t\t\tupdatedAt: now,\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tuser: {\r\n\t\t\t\t...exUser.attrs,\r\n\t\t\t},\r\n\t\t\tdiary: diary.attrs,\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn handleErrors(error, \"Failed to create Diary!\");\r\n\t}\r\n};\r\n\r\n// Update Diary Method\r\nexport const updateDiary = (schema: any, req: Request): Diary | Response => {\r\n\ttry {\r\n\t\tconst diary = schema.diaries.find(req.params.id);\r\n\t\tconst data = JSON.parse(req.requestBody) as Partial<Diary>;\r\n\t\tconst now = dayjs().format();\r\n\t\tdiary.update({\r\n\t\t\t...data,\r\n\t\t\tupdatedAt: now,\r\n\t\t});\r\n\t\treturn diary.attrs as Diary;\r\n\t} catch (error) {\r\n\t\treturn handleErrors(error, \"fialed to update diary.\");\r\n\t}\r\n};\r\n\r\n// getDiaries method\r\nexport const getDiaries = (schema: any, req: Request): Diary[] | Response => {\r\n\ttry {\r\n\t\tconst user = schema.users.find(req.params.id);\r\n\t\treturn user.diary as Diary[];\r\n\t} catch (error) {\r\n\t\treturn handleErrors(error, \"could'nt get user diaries.\");\r\n\t}\r\n};\r\n\r\n// Methods for entries\r\n// addEntry Method\r\nexport const addEntry = (\r\n\tschema: any,\r\n\treq: Request\r\n): { diary: Diary; entry: Entry } | Response => {\r\n\ttry {\r\n\t\tconst diary = schema.diaries.find(req.params.id);\r\n\t\tconst { title, content } = JSON.parse(req.requestBody) as Partial<Entry>;\r\n\t\tconst now = dayjs().format();\r\n\t\tconst entry = diary.createEntry({\r\n\t\t\ttitle,\r\n\t\t\tcontent,\r\n\t\t\tcreatedAt: now,\r\n\t\t\tupdatedAt: now,\r\n\t\t});\r\n\t\tdiary.update({\r\n\t\t\t...diary.attrs,\r\n\t\t\tupdatedAt: now,\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tdiary: diary.attrs,\r\n\t\t\tentry: entry.attrs,\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn handleErrors(error, \"failed to save entry\");\r\n\t}\r\n};\r\n\r\n// getEntries method\r\nexport const getEntries = (\r\n\tschema: any,\r\n\treq: Request\r\n): { entries: Entry[] } | Response => {\r\n\ttry {\r\n\t\tconst diary = schema.diaries.find(req.params.id);\r\n\t\treturn diary.entry;\r\n\t} catch (error) {\r\n\t\treturn handleErrors(error, \"failed to get diary entries.\");\r\n\t}\r\n};\r\n\r\n// updateEntry method\r\nexport const updateEntry = (schema: any, req: Request): Entry | Response => {\r\n\ttry {\r\n\t\tconst entry = schema.entries.find(req.params.id);\r\n\t\tconst data = JSON.parse(req.requestBody) as Partial<Entry>;\r\n\t\tconst now = dayjs().format();\r\n\t\tentry.update({\r\n\t\t\t...data,\r\n\t\t\tupdatedAt: now,\r\n\t\t});\r\n\t\treturn entry.attrs as Entry;\r\n\t} catch (error) {\r\n\t\treturn handleErrors(error, \"Failed to update entry.\");\r\n\t}\r\n};\r\n","E:\\Bootcamp 2020\\diaries-app\\src\\store.ts",[],"E:\\Bootcamp 2020\\diaries-app\\src\\rootReducer.ts",[],"E:\\Bootcamp 2020\\diaries-app\\src\\features\\diary\\diariesSlice.ts",[],"E:\\Bootcamp 2020\\diaries-app\\src\\features\\auth\\authSlice.ts",["73"],"E:\\Bootcamp 2020\\diaries-app\\src\\features\\auth\\userSlice.ts",[],"E:\\Bootcamp 2020\\diaries-app\\src\\features\\entry\\entriesSlice.ts",[],"E:\\Bootcamp 2020\\diaries-app\\src\\features\\entry\\editorSlice.ts",[],"E:\\Bootcamp 2020\\diaries-app\\src\\app\\App.tsx",[],"E:\\Bootcamp 2020\\diaries-app\\src\\features\\auth\\Auth.tsx",["74"],"E:\\Bootcamp 2020\\diaries-app\\src\\services\\api.ts",[],"E:\\Bootcamp 2020\\diaries-app\\src\\util.ts",[],"E:\\Bootcamp 2020\\diaries-app\\src\\features\\home\\Home.tsx",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":43,"column":1,"nodeType":"81","endLine":43,"endColumn":34},{"ruleId":"82","severity":1,"message":"83","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":12},{"ruleId":"82","severity":1,"message":"86","line":1,"column":23,"nodeType":"84","messageId":"85","endLine":1,"endColumn":36},{"ruleId":"82","severity":1,"message":"87","line":11,"column":7,"nodeType":"84","messageId":"85","endLine":11,"endColumn":13},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'user' is defined but never used.","Identifier","unusedVar","'PayloadAction' is defined but never used.","'schema' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]